[{"C:\\Users\\Squirrel\\Documents\\ubunt\\workshop\\ia-workshop-2021\\src\\index.js":"1","C:\\Users\\Squirrel\\Documents\\ubunt\\workshop\\ia-workshop-2021\\src\\reportWebVitals.js":"2","C:\\Users\\Squirrel\\Documents\\ubunt\\workshop\\ia-workshop-2021\\src\\App.js":"3","C:\\Users\\Squirrel\\Documents\\ubunt\\workshop\\ia-workshop-2021\\src\\context.js":"4","C:\\Users\\Squirrel\\Documents\\ubunt\\workshop\\ia-workshop-2021\\src\\Views\\Landing\\index.js":"5","C:\\Users\\Squirrel\\Documents\\ubunt\\workshop\\ia-workshop-2021\\src\\Views\\Summary\\index.js":"6","C:\\Users\\Squirrel\\Documents\\ubunt\\workshop\\ia-workshop-2021\\src\\Views\\Questions\\index.js":"7"},{"size":522,"mtime":1613779375692,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":4963,"mtime":1614214116832,"results":"11","hashOfConfig":"9"},{"size":304,"mtime":1613779375692,"results":"12","hashOfConfig":"9"},{"size":1016,"mtime":1614138666438,"results":"13","hashOfConfig":"9"},{"size":1130,"mtime":1614137691376,"results":"14","hashOfConfig":"9"},{"size":2119,"mtime":1614213789781,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1pg19zt",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"C:\\Users\\Squirrel\\Documents\\ubunt\\workshop\\ia-workshop-2021\\src\\index.js",[],["34","35"],"C:\\Users\\Squirrel\\Documents\\ubunt\\workshop\\ia-workshop-2021\\src\\reportWebVitals.js",[],"C:\\Users\\Squirrel\\Documents\\ubunt\\workshop\\ia-workshop-2021\\src\\App.js",["36"],"import { useState } from 'react';\r\nimport './App.scss';\r\n// import {IconSettings, Icon } from '@salesforce/design-system-react';\r\nimport Landing from './Views/Landing/index';\r\nimport Questions from './Views/Questions/index';\r\nimport Summary from './Views/Summary/index';\r\nimport mainIcon from './icons/copy_to_clipboard.png';\r\nimport { UserContext } from './context';\r\n\r\nfunction App() {\r\n\r\n  // Hooks\r\n  const [message, setMessage] = useState(\"hello from context\")\r\n  const [step, setStep] = useState(1);\r\n\r\n  let questionArray = [\r\n    'What are three positive things your last boss would say about you?',\r\n    'Describe your design process and what methods you follow?',\r\n    'What are the some of the biggest challenges you face as a UX designer?',\r\n    'What are some of the biggest trends in the UX Design industry right now?',\r\n    'When a client says, “I don’t like this design” What do you do?',\r\n    'Can you walk me through a design example where you set out to solve a business problem?',\r\n    'How do you know when a project is finish?',\r\n    'What are the difference between designing for desktop and mobile devices?',\r\n    'What are the biggest challenges as a UX designer?',\r\n    'Have you worked in the lean or agile process environment before?',\r\n    'How did you get into UX Design?',\r\n    'What tools do you use?',\r\n    'Why are interested in this company?',\r\n    'What makes you want to leave your current job?',\r\n    'What do you do when you are struggling to find inspiration?',\r\n    'How do you help someone understand your perspective if they are not on the same page with the design?',\r\n  ]\r\n\r\n  let questions = {\r\n    '1': 'What are three positive things your last boss would say about you?',\r\n    '2': 'Describe your design process and what methods you follow?',\r\n    '3': 'What are the some of the biggest challenges you face as a UX designer?',\r\n    '4': 'What are some of the biggest trends in the UX Design industry right now?',\r\n    '5': 'When a client says, “I don’t like this design” What do you do?',\r\n    '6': 'Can you walk me through a design example where you set out to solve a business problem?',\r\n    '7': 'How do you know when a project is finish?',\r\n    '8': 'What are the difference between designing for desktop and mobile devices?',\r\n    '9': 'What are the biggest challenges as a UX designer?',\r\n    '10': 'Have you worked in the lean or agile process environment before?',\r\n    '11': 'How did you get into UX Design?',\r\n    '12': 'What tools do you use?',\r\n    '13': 'Why are interested in this company?',\r\n    '14': 'What makes you want to leave your current job?',\r\n    '15': 'What do you do when you are struggling to find inspiration?',\r\n    '16': 'How do you help someone understand your perspective if they are not on the same page with the design?',\r\n  }\r\n\r\n  let currentStep;\r\n  let cardStatement = \"\";\r\n\r\n  switch(step) {\r\n    case 1:\r\n      currentStep = <Landing />;\r\n      cardStatement = \"This is a rapid fire exercise to help you to be on your feet when you talk about interview. At the bottom there will be a question for you and you have 30 secs to answer it. This will help you to be on your toes to answer them in a fast order.\";\r\n      break;\r\n    case 2:\r\n      currentStep = <Questions />;\r\n      cardStatement = \"Read the question and relax and think about your answer. Make sure you keep in under 30 sec. You can always practice more.\";\r\n      break;\r\n    case 3:\r\n      currentStep = <Summary />;\r\n      cardStatement = \"Well, now you have a experience under your belt and what can I say. You did it, this is the first start to really practice your questions. You can always come back and try again.\";\r\n        break;\r\n      default:\r\n        console.log('error')\r\n  }\r\n  \r\n  return (\r\n    <UserContext.Provider value={{message, setMessage, step, setStep, questions, questionArray}}>\r\n      {/* <IconSettings iconPath=\"/assets/icons\"> */}\r\n      <div className=\"App\">\r\n        <div className=\"header-content\">\r\n          <h1 className={'app-title'}>Interview Questions</h1>\r\n          <div className=\"header-content--sub\">\r\n            <div>\r\n              <img src={mainIcon} className=\"main-icon\" />\r\n              {/* <Icon\r\n\t\t\t\t\t\t\tassistiveText={{ label: 'Account' }}\r\n\t\t\t\t\t\t\tcolorVariant=\"base\"\r\n              category=\"utility\"\r\n\t\t\t\t\t\t\tname=\"announcement\"\r\n\t\t\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\t\t/> */}\r\n              </div>\r\n            <div classname=\"app-badge\" style={{marginBottom: '48px', marginLeft: '9px'}}>\r\n              <p className={'badge-text'}>Got Questions?</p>\r\n              <p className={'badge-text'}>We've got practice...</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"app-statement\">\r\n          <p>{cardStatement}</p>\r\n        </div>\r\n        <div className='content-wrapper'>\r\n          {currentStep}\r\n        </div>\r\n      </div>\r\n      {/* </IconSettings> */}\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Squirrel\\Documents\\ubunt\\workshop\\ia-workshop-2021\\src\\context.js",[],"C:\\Users\\Squirrel\\Documents\\ubunt\\workshop\\ia-workshop-2021\\src\\Views\\Landing\\index.js",[],"C:\\Users\\Squirrel\\Documents\\ubunt\\workshop\\ia-workshop-2021\\src\\Views\\Summary\\index.js",["37","38","39","40"],"import { useContext } from 'react';\r\nimport {Button, Card, IconSettings, Icon} from '@salesforce/design-system-react';\r\nimport './styles.scss';\r\nimport icon from '../../icons/summary_icon.png';\r\nimport { UserContext } from '../../context';\r\n\r\nfunction Summary() {\r\n    const {step, setStep} = useContext(UserContext);\r\n\r\n    return (\r\n        <>\r\n        <Card\r\n            id=\"summaryCard\"\r\n            heading={null}\r\n            className={'ia-card'}\r\n        >\r\n            <div className=\"card-content\">\r\n                <div className={\"summary-content\"}>\r\n\t\t\t\t\t<div>\r\n                        <img src={icon} className='summary-icon' />\r\n\t\t\t\t\t</div>\r\n                    <div className={'logo-copy'}>\r\n                        <p>Thanks for stopping by!</p>\r\n                    </div>\r\n            </div>\r\n                <div className={'summary-cta'} style={{display: 'flex'}}>\r\n                <Button\r\n\t\t\t\t\t\t// disabled\r\n\t\t\t\t\t\tlabel=\"Restart\"\r\n\t\t\t\t\t\tonClick={() => setStep(1)}\r\n\t\t\t\t\t\tvariant=\"brand\"\r\n\t\t\t\t\t/>\r\n                </div>\r\n            </div>\r\n        </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Summary;","C:\\Users\\Squirrel\\Documents\\ubunt\\workshop\\ia-workshop-2021\\src\\Views\\Questions\\index.js",["41","42"],"import { useContext, useEffect, useState } from 'react';\r\nimport {Button, Card} from '@salesforce/design-system-react';\r\nimport { UserContext } from '../../context';\r\nimport './styles.scss';\r\n\r\nfunction Questions() {\r\n    const { step, setStep, questions, questionArray } = useContext(UserContext);\r\n    const [questionCurrent, setQuestionCurrent] = useState(1);\r\n    const [questionNum, setQuestionNum] = useState(1);\r\n\r\n    const changeQuestion = () => {\r\n        questionArray.splice(questionCurrent, 1);\r\n        setQuestionNum(questionNum + 1);\r\n        const min = 0;\r\n        const max = questionArray.length -1;\r\n        const rand = Math.floor(min + Math.random() * (max - min));\r\n        setQuestionCurrent(rand)\r\n    }\r\n\r\n    let question = questionArray[`${questionCurrent}`];//questions[`${questionCurrent}`]\r\n\r\n    return (\r\n        <>\r\n        {/* <div>\r\n            <p>Read the question and relax and think about your answer. Make sure you keep in under 30 sec. You can always practice more.</p>\r\n        </div> */}\r\n        <Card\r\n            id=\"questionCard\"\r\n            heading=\"\"\r\n            className={'ia-card'}\r\n        >\r\n            <div className=\"card-content\">\r\n                <div>\r\n                <h2 className=\"question\">{(questionNum > 15)? '':`Q${questionNum}:`}</h2>\r\n                <div className='quiz-content'>\r\n                <p className=\"card-statement\">{(questionNum > 15)? \"You're Hired!\":question}</p>\r\n                <div className={'ctas'}>\r\n                <Button\r\n                        disabled={(questionNum > 15)? true:false}\r\n                        className=\"cta1\"\r\n\t\t\t\t\t\tlabel=\"Skip Question\"\r\n\t\t\t\t\t\tonClick={changeQuestion}\r\n\t\t\t\t\t\tvariant=\"outline-brand\"\r\n\t\t\t\t\t/>\r\n\r\n                <Button\r\n                        className=\"cta2\"\r\n                        label=\"Done\"\r\n                        onClick={() => setStep(step + 1)}\r\n                        variant=\"brand\"\r\n                    />\r\n                </div>\r\n                </div></div>                \r\n            </div>\r\n        </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Questions;",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":82,"column":15,"nodeType":"49","endLine":82,"endColumn":59},{"ruleId":"50","severity":1,"message":"51","line":2,"column":23,"nodeType":"52","messageId":"53","endLine":2,"endColumn":35},{"ruleId":"50","severity":1,"message":"54","line":2,"column":37,"nodeType":"52","messageId":"53","endLine":2,"endColumn":41},{"ruleId":"50","severity":1,"message":"55","line":8,"column":12,"nodeType":"52","messageId":"53","endLine":8,"endColumn":16},{"ruleId":"47","severity":1,"message":"48","line":20,"column":25,"nodeType":"49","endLine":20,"endColumn":68},{"ruleId":"50","severity":1,"message":"56","line":1,"column":22,"nodeType":"52","messageId":"53","endLine":1,"endColumn":31},{"ruleId":"50","severity":1,"message":"57","line":7,"column":28,"nodeType":"52","messageId":"53","endLine":7,"endColumn":37},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'IconSettings' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","'step' is assigned a value but never used.","'useEffect' is defined but never used.","'questions' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]