{"version":3,"sources":["Views/Landing/index.js","Views/Questions/index.js","Views/Summary/index.js","App.js","reportWebVitals.js","index.js"],"names":["Landing","Questions","Summary","App","useState","step","setStep","currentStep","className","iconPath","label","onClick","variant","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAMeA,MANf,WACI,OACI,+CCIOC,MANf,WACI,OACI,iDCIOC,MANf,WACI,OACI,+CCgEOC,MA1Df,WAEE,IAFa,EAIWC,mBAAS,GAJpB,mBAINC,EAJM,KAIAC,EAJA,KAcTC,EAAc,cAAC,EAAD,IAElB,OAAOF,GACL,KAAK,EACHE,EAAc,cAAC,EAAD,IACd,MACF,KAAK,EACHA,EAAc,cAAC,EAAD,IACd,MACF,KAAK,EACHA,EAAc,cAAC,EAAD,IAOlB,OACE,sBAAKC,UAAU,MAAf,UACE,gDAAmBH,KACnB,cAAC,IAAD,CAAcI,SAAS,gBAAvB,SACF,sBAAKD,UAAU,kCAAf,UACC,cAAC,IAAD,CAECE,MAAM,YACNC,QA7Ba,WACfL,EAASD,EATQ,EASYA,EAAO,EAAGA,IA6BrCO,QAAQ,UAEJ,cAAC,IAAD,CAEJF,MAAM,QACNC,QAvCe,WACjBL,EAAQ,IAuCNM,QAAQ,eAIR,gCACE,yCACCL,SChDMM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f4dd44aa.chunk.js","sourcesContent":["function Landing() {\n    return (\n        <h2>Landing Page</h2>\n    );\n}\n\nexport default Landing;","function Questions() {\n    return (\n        <h2>Questions Page</h2>\n    );\n}\n\nexport default Questions;","function Summary() {\n    return (\n        <h2>Summary Page</h2>\n    );\n}\n\nexport default Summary;","import { useState} from 'react';\nimport './App.css';\nimport {IconSettings, Button } from '@salesforce/design-system-react';\nimport Landing from './Views/Landing/index';\nimport Questions from './Views/Questions/index';\nimport Summary from './Views/Summary/index';\n\n\nfunction App() {\n\n  const totalSteps = 3;\n\n  const [step, setStep] = useState(1);\n\n  const resetSteps = () => {\n    setStep(1)\n  }\n\n  const nextStep = () => {\n    setStep((step < totalSteps)? step + 1: step)\n  }\n\n  let currentStep = <Landing />;\n\n  switch(step) {\n    case 1:\n      currentStep = <Landing />;\n      break;\n    case 2:\n      currentStep = <Questions />;\n      break;\n    case 3:\n      currentStep = <Summary />;\n        break;\n      default:\n      // code block\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1>IA 2021! Step {step}</h1>\n      <IconSettings iconPath=\"/assets/icons\">\n\t\t\t\t<div className=\"slds-x-small-buttons_horizontal\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\t// disabled\n\t\t\t\t\t\tlabel=\"Next Step\"\n\t\t\t\t\t\tonClick={nextStep}\n\t\t\t\t\t\tvariant=\"brand\"\n\t\t\t\t\t/>\n          <Button\n\t\t\t\t\t\t// disabled\n\t\t\t\t\t\tlabel=\"Reset\"\n\t\t\t\t\t\tonClick={resetSteps}\n\t\t\t\t\t\tvariant=\"brand\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</IconSettings>\n      <div>\n        <h3>Section</h3>\n        {currentStep}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}